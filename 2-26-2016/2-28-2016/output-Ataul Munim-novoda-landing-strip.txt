novoda/landing-strip -- ataulm -- Ataul Munim
https://github.com/novoda/landing-strip.git
git clone https://github.com/novoda/landing-strip.git
.\/landing-strip\
.\/landing-strip\.git
0
Project cloned!
Ataul Munim is responsible for commit ccc4b8284bc634b46f6627b7aa1e3e23e8f5d168
Ataul Munim is responsible for commit 3ca26235981b729c8733c6a689bdca3dcb2c4566
Ataul Munim is responsible for commit f13aff538590bb4e583f65e9ddb082aab9718b35
Ataul Munim is responsible for commit 1ba105ce32b9769efb3933b74b8b736b463f4bd3
Ataul Munim is responsible for commit a52608cb051ad8793b1425918fe14070c8f11ec5
Ataul Munim is responsible for commit 44002cfc7040a12e3ffe5f81554c54721d3b5abd
Ataul Munim is responsible for commit 6e74e7bd3b03d37a0f223eacadda7b7bc2b4e6a0
Ataul Munim is responsible for commit 8893b0893208f8d7d81409b6bc32e988d1db555f
Ataul Munim is responsible for commit ba4f42bb6866972076e521475f547ea1ecb17f2c
Ataul Munim is responsible for commit 0199c5bcc3ab62a0b36499ce071bcfb8046605ea
Ataul Munim is responsible for commit 80ab5dc1e391d71d01f8cb96e347f5db779f488d
Ataul Munim is responsible for commit 21b51ac9175fe7de18346394e4f8ad48f4100e9a
Ataul Munim is responsible for commit 63e6e62b09dc8bca1fd845f123d02394b363c58c
Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.

 ************ ANALYZING FOR USAGE PATTERN ADDITION ************

************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null

****Parsing for addition at revision ccc4b8284bc634b46f6627b7aa1e3e23e8f5d168****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of ccc4b8284bc634b46f6627b7aa1e3e23e8f5d168 and 3ca26235981b729c8733c6a689bdca3dcb2c4566:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 0
	--> recency = null
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision ccc4b8284bc634b46f6627b7aa1e3e23e8f5d168 to 3ca26235981b729c8733c6a689bdca3dcb2c4566


****Parsing for addition at revision 3ca26235981b729c8733c6a689bdca3dcb2c4566****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 3ca26235981b729c8733c6a689bdca3dcb2c4566 and f13aff538590bb4e583f65e9ddb082aab9718b35:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 0
	--> recency = null
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision 3ca26235981b729c8733c6a689bdca3dcb2c4566 to f13aff538590bb4e583f65e9ddb082aab9718b35


****Parsing for addition at revision f13aff538590bb4e583f65e9ddb082aab9718b35****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of f13aff538590bb4e583f65e9ddb082aab9718b35 and 1ba105ce32b9769efb3933b74b8b736b463f4bd3:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 0
	--> recency = null
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision f13aff538590bb4e583f65e9ddb082aab9718b35 to 1ba105ce32b9769efb3933b74b8b736b463f4bd3


****Parsing for addition at revision 1ba105ce32b9769efb3933b74b8b736b463f4bd3****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 1ba105ce32b9769efb3933b74b8b736b463f4bd3 and 2d8dc71912caacf95e9c8fe27a691a58af8975ae:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 0
	--> recency = null
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null
GitAPIException thrown!
Cannot revert commit '1ba105ce32b9769efb3933b74b8b736b463f4bd3' because it has 2 parents, only commits with exactly one parent are supported
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 0

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 0
	--> recency = null
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null

****Parsing for addition at revision a52608cb051ad8793b1425918fe14070c8f11ec5****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of a52608cb051ad8793b1425918fe14070c8f11ec5 and 44002cfc7040a12e3ffe5f81554c54721d3b5abd:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 0
	--> recency = null
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision a52608cb051ad8793b1425918fe14070c8f11ec5 to 44002cfc7040a12e3ffe5f81554c54721d3b5abd


****Parsing for addition at revision 44002cfc7040a12e3ffe5f81554c54721d3b5abd****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 44002cfc7040a12e3ffe5f81554c54721d3b5abd and 6e74e7bd3b03d37a0f223eacadda7b7bc2b4e6a0:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 0
	--> recency = null
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision 44002cfc7040a12e3ffe5f81554c54721d3b5abd to 6e74e7bd3b03d37a0f223eacadda7b7bc2b4e6a0


****Parsing for addition at revision 6e74e7bd3b03d37a0f223eacadda7b7bc2b4e6a0****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 6e74e7bd3b03d37a0f223eacadda7b7bc2b4e6a0 and 8893b0893208f8d7d81409b6bc32e988d1db555f:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 0
	--> recency = null
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision 6e74e7bd3b03d37a0f223eacadda7b7bc2b4e6a0 to 8893b0893208f8d7d81409b6bc32e988d1db555f


****Parsing for addition at revision 8893b0893208f8d7d81409b6bc32e988d1db555f****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 8893b0893208f8d7d81409b6bc32e988d1db555f and ba4f42bb6866972076e521475f547ea1ecb17f2c:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 0
	--> recency = null
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision 8893b0893208f8d7d81409b6bc32e988d1db555f to ba4f42bb6866972076e521475f547ea1ecb17f2c


****Parsing for addition at revision ba4f42bb6866972076e521475f547ea1ecb17f2c****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of ba4f42bb6866972076e521475f547ea1ecb17f2c and 0199c5bcc3ab62a0b36499ce071bcfb8046605ea:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 1
	--> recency = year
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision ba4f42bb6866972076e521475f547ea1ecb17f2c to 0199c5bcc3ab62a0b36499ce071bcfb8046605ea


****Parsing for addition at revision 0199c5bcc3ab62a0b36499ce071bcfb8046605ea****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 0199c5bcc3ab62a0b36499ce071bcfb8046605ea and 80ab5dc1e391d71d01f8cb96e347f5db779f488d:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 1
	--> recency = year
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision 0199c5bcc3ab62a0b36499ce071bcfb8046605ea to 80ab5dc1e391d71d01f8cb96e347f5db779f488d


****Parsing for addition at revision 80ab5dc1e391d71d01f8cb96e347f5db779f488d****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 80ab5dc1e391d71d01f8cb96e347f5db779f488d and 21b51ac9175fe7de18346394e4f8ad48f4100e9a:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 1
	--> recency = year
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision 80ab5dc1e391d71d01f8cb96e347f5db779f488d to 21b51ac9175fe7de18346394e4f8ad48f4100e9a


****Parsing for addition at revision 21b51ac9175fe7de18346394e4f8ad48f4100e9a****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

 Generics pattern public class DemoFragmentPagerAdapter was added at revision 21b51ac9175fe7de18346394e4f8ad48f4100e9a

ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 21b51ac9175fe7de18346394e4f8ad48f4100e9a and 63e6e62b09dc8bca1fd845f123d02394b363c58c:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 2
	--> recency = year
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision 21b51ac9175fe7de18346394e4f8ad48f4100e9a to 63e6e62b09dc8bca1fd845f123d02394b363c58c


****Parsing for addition at revision 63e6e62b09dc8bca1fd845f123d02394b363c58c****

Added Exposer.java to .\/landing-strip\ repository source files.
Added Attributes.java to .\/landing-strip\ repository source files.
Added Coordinates.java to .\/landing-strip\ repository source files.
Added FastForwarder.java to .\/landing-strip\ repository source files.
Added IndicatorCoordinatesCalculator.java to .\/landing-strip\ repository source files.
Added LandingStrip.java to .\/landing-strip\ repository source files.
Added MutableCoordinates.java to .\/landing-strip\ repository source files.
Added OnPageChangedListenerCollection.java to .\/landing-strip\ repository source files.
Added OnPagerAdapterChangedListener.java to .\/landing-strip\ repository source files.
Added PagerAdapterObserver.java to .\/landing-strip\ repository source files.
Added Scrollable.java to .\/landing-strip\ repository source files.
Added ScrollingPageChangeListener.java to .\/landing-strip\ repository source files.
Added ScrollOffsetCalculator.java to .\/landing-strip\ repository source files.
Added State.java to .\/landing-strip\ repository source files.
Added TabsContainer.java to .\/landing-strip\ repository source files.
Added CustomLandingStrip.java to .\/landing-strip\ repository source files.
Added CustomTabActivity.java to .\/landing-strip\ repository source files.
Added ExampleRainbowLandingStrip.java to .\/landing-strip\ repository source files.
Added FixedWidthTabActivity.java to .\/landing-strip\ repository source files.
Added MultipleListenersActivity.java to .\/landing-strip\ repository source files.
Added NoFragmentsSimpleTextTabActivity.java to .\/landing-strip\ repository source files.
Added Data.java to .\/landing-strip\ repository source files.
Added DemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added SmallDemoFragmentPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerFragment.java to .\/landing-strip\ repository source files.
Added DemoViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapter.java to .\/landing-strip\ repository source files.
Added ViewPagerAdapterState.java to .\/landing-strip\ repository source files.
Added SimpleTextTabActivity.java to .\/landing-strip\ repository source files.
animator=ViewUtils.createAnimator()
ValueAnimatorCompat animator = ViewUtils.createAnimator();
xml=context.obtainStyledAttributes(attrs,R.styleable.LandingStrip)
TypedArray xml = context.obtainStyledAttributes(attrs, R.styleable.LandingStrip);
tabLayoutId=xml.getResourceId(R.styleable.LandingStrip_tabLayoutId,MISSING_TAB_LAYOUT_ID)
int tabLayoutId = xml.getResourceId(R.styleable.LandingStrip_tabLayoutId, MISSING_TAB_LAYOUT_ID);
indicatorColour=xml.getResourceId(R.styleable.LandingStrip_indicatorColor,DEFAULT_INDICATOR_COLOUR)
int indicatorColour = xml.getResourceId(R.styleable.LandingStrip_indicatorColor, DEFAULT_INDICATOR_COLOUR);
indicatorHeight=getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight,DEFAULT_INDICATOR_HEIGHT,xml)
int indicatorHeight = getDimensPixelSize(R.styleable.LandingStrip_indicatorHeight, DEFAULT_INDICATOR_HEIGHT, xml);
tabsPaddingLeft=getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingLeft = getDimensPixelSize(R.styleable.LandingStrip_tabsLeftPadding, DEFAULT_TABS_PADDING, xml);
tabsPaddingRight=getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding,DEFAULT_TABS_PADDING,xml)
int tabsPaddingRight = getDimensPixelSize(R.styleable.LandingStrip_tabsRightPadding, DEFAULT_TABS_PADDING, xml);
startScrollX=scrollable.getCurrentScrollX()
int startScrollX = scrollable.getCurrentScrollX();
targetScrollX=scrollOffsetCalculator.calculateScrollOffset(newPosition,0)
int targetScrollX = scrollOffsetCalculator.calculateScrollOffset(newPosition, 0);
animator=Exposer.animator()
Exposer.Animator animator = Exposer.animator();
MutableCoordinates drawCurrentTabCoordinates = new MutableCoordinates();
MutableCoordinates drawNextTabCoordinates = new MutableCoordinates();
MutableCoordinates drawMovingIndicatorCoordinates = new MutableCoordinates();
currentTab=tabsContainer.getTabAt(currentPosition)
View currentTab = tabsContainer.getTabAt(currentPosition);
currentTabStart=currentTab.getLeft()
float currentTabStart = currentTab.getLeft();
currentTabEnd=currentTab.getRight()
float currentTabEnd = currentTab.getRight();
nextTab=tabsContainer.getTabAt(currentPosition + 1)
View nextTab = tabsContainer.getTabAt(currentPosition + 1);
nextTabPositionOffset=getFractionFrom(pagePositionOffset)
float nextTabPositionOffset = getFractionFrom(pagePositionOffset);
indicatorStart=getIndicatorPosition(nextTab.getStart(),pagePositionOffset,currentTab.getStart(),nextTabPositionOffset)
float indicatorStart = getIndicatorPosition(nextTab.getStart(), pagePositionOffset, currentTab.getStart(), nextTabPositionOffset);
indicatorEnd=getIndicatorPosition(nextTab.getEnd(),pagePositionOffset,currentTab.getEnd(),nextTabPositionOffset)
float indicatorEnd = getIndicatorPosition(nextTab.getEnd(), pagePositionOffset, currentTab.getEnd(), nextTabPositionOffset);
height=getHeight()
int height = getHeight();
tabCount=pagerAdapter.getCount()
int tabCount = pagerAdapter.getCount();
title=pagerAdapter.getPageTitle(position)
CharSequence title = pagerAdapter.getPageTitle(position);
inflatedTabView=tabsContainer.inflateTab(layoutInflater,attributes.getTabLayoutId())
View inflatedTabView = tabsContainer.inflateTab(layoutInflater, attributes.getTabLayoutId());
ScrollingPageChangeListener scrollingPageChangeListener = new ScrollingPageChangeListener(state, tabsContainer,
                scrollOffsetCalculator, this, fastForwarder, onPageChangeListenerCollection);
int position = (int) view.getTag(TAG_KEY_POSITION);
tabForPosition=tabsContainer.getTabAt(position)
View tabForPosition = tabsContainer.getTabAt(position);
float tabStartX = tabForPosition.getLeft() + getHorizontalScrollOffset(position, pagerOffset);
float viewMiddleOffset = getTabParentWidth() * HALF_MULTIPLIER;
float tabCenterOffset = (tabForPosition.getRight() - tabForPosition.getLeft()) * HALF_MULTIPLIER;
nextTabDelta=getNextTabDelta(position,pagerOffset,tabForPosition)
float nextTabDelta = getNextTabDelta(position, pagerOffset, tabForPosition);
tabWidth=tabsContainer.getTabAt(position).getWidth()
int tabWidth = tabsContainer.getTabAt(position).getWidth();
State state = new State();
LinearLayout tabsContainerView = new LinearLayout(context);
observer=getTabAt(0).getViewTreeObserver()
ViewTreeObserver observer = getTabAt(0).getViewTreeObserver();
tab=getTabAt(index)
View tab = getTabAt(index);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
position=indicatorCoordinates.getStart()
float position = indicatorCoordinates.getStart();
lastTabOffset=((ViewGroup)getChildAt(0)).getChildAt(getChildCount() - 1).getWidth()
float lastTabOffset = ((ViewGroup) getChildAt(0)).getChildAt(getChildCount() - 1).getWidth();
frequency=getOneCycle(lastTabOffset)
float frequency = getOneCycle(lastTabOffset);
r=toHex(calculateColour(position,frequency,PHASE_RED,AMPLITUDE,CENTER_FREQUENCY))
String r = toHex(calculateColour(position, frequency, PHASE_RED, AMPLITUDE, CENTER_FREQUENCY));
g=toHex(calculateColour(position,frequency,PHASE_GREEN,AMPLITUDE,CENTER_FREQUENCY))
String g = toHex(calculateColour(position, frequency, PHASE_GREEN, AMPLITUDE, CENTER_FREQUENCY));
b=toHex(calculateColour(position,frequency,PHASE_BLUE,AMPLITUDE,CENTER_FREQUENCY))
String b = toHex(calculateColour(position, frequency, PHASE_BLUE, AMPLITUDE, CENTER_FREQUENCY));
height=getHeight()
int height = getHeight();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
LandingStrip landingStrip = (LandingStrip) findViewById(com.novoda.landing_strip.R.id.landing_strip);
ViewPager viewPager = (ViewPager) findViewById(com.novoda.landing_strip.R.id.view_pager);
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);
ViewPagerFragment viewPagerFragment = new ViewPagerFragment();
Bundle bundle = new Bundle();
TextView view = (TextView) layoutInflater.inflate(R.layout.view_demo, container, false);
currentPosition=viewPagerAdapterState.getCurrentPosition()
int currentPosition = viewPagerAdapterState.getCurrentPosition();
view=getView(container,position)
View view = getView(container, position);
parcelableSparseArray=viewPagerAdapterState.get(position)
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
SparseArray<Parcelable> parcelableSparseArray = viewPagerAdapterState.get(position);
View view = (View) object;
SparseArray<Parcelable> viewState = new SparseArray<>();
position=entry.getValue()
int position = entry.getValue();
view=entry.getKey()
View view = entry.getKey();
bundle=in.readBundle()
Bundle bundle = in.readBundle();
Map<Integer, SparseArray<Parcelable>> viewStates = new HashMap<>(bundle.keySet().size());
sparseParcelableArray=bundle.getSparseParcelableArray(key)
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
SparseArray<Parcelable> sparseParcelableArray = bundle.getSparseParcelableArray(key);
primaryItemPosition=in.readInt()
int primaryItemPosition = in.readInt();
Bundle bundle = new Bundle();
ViewPager viewPager = (ViewPager) findViewById(R.id.view_pager);
LandingStrip landingStrip = (LandingStrip) findViewById(R.id.landing_strip);

Diff of 63e6e62b09dc8bca1fd845f123d02394b363c58c and d7f442bdbd1f8a98f82acf05f55958c1d43088d5:
	--> Added type argument methods = 0
	--> recency = null
	--> Added wildcards = 0
	--> recency = null
	--> Added type declarations  = 2
	--> recency = year
	--> Added type parameter methods = 0
	--> recency = null
	--> Added type parameter fields = 0
	--> recency = null
	--> Added diamonds = 0
	--> recency = null
	--> Added explicit method invocations = 0
	--> recency = null
	--> Added implicit method invocations = 0
	--> recency = null
	--> Added class instantiations = 0
	--> recency = null
	--> Added nested = 0
	--> recency = null
	--> Added bounds = 0
	--> recency = null

 Reverted revision 63e6e62b09dc8bca1fd845f123d02394b363c58c to d7f442bdbd1f8a98f82acf05f55958c1d43088d5

************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
************Analysis complete************
Added generics to repository novoda/landing-strip = 1

Ataul Munim added type argument method count = 0
	--> recency = null
Ataul Munim added wildcard count = 0
	--> recency = null
Ataul Munim added type declaration count = 2
	--> recency = year
Ataul Munim added type parameter method count = 0
	--> recency = null
Ataul Munim added type parameter field count = 0
	--> recency = null
Ataul Munim added diamond count = 0
	--> recency = null
Ataul Munim added method invocation count = 0
	--> recency = null
Ataul Munim added implicit method invocation count = 0
	--> recency = null
Ataul Munim added class instantiation count = 0
	--> recency = null
Ataul Munim added nested count = 0
	--> recency = null
Ataul Munim added bounds count = 0
	--> recency = null
